import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { trpc } from "../utils/trpc";

const AllQuestions: NextPage = () => {
  const utils = trpc.useContext();
  const {
    data: questions,
    isLoading,
    isError,
  } = trpc.question.getQuestions.useQuery();

  const deleteQuestion = trpc.question.deleteQuestion.useMutation({
    onMutate: () => {
      utils.question.getQuestions.cancel();
      const optimisticUpdate = utils.question.getQuestions.getData();

      if (optimisticUpdate) {
        utils.question.getQuestions.setData(optimisticUpdate);
      }
    },
    onSettled: () => {
      utils.question.getQuestions.invalidate();
    },
  });

  if (isLoading) {
    return <div>Loading...</div>;
  }

  if (isError) {
    return <div>Error</div>;
  }

  return (
    <>
      <Head>
        <title>QuizApp</title>
        <meta name="description" content="Generated by create-t3-app" />
      </Head>

      <main className="container mx-auto flex min-h-screen flex-col items-center justify-center p-4">
        <h1 className="text-3xl font-bold text-sky-300">All questions</h1>

        <Link className="reg-button mb-8 w-fit" href="/">
          Return home
        </Link>
        {questions.map((question) => (
          <div
            key={question.id}
            className=" mt-6 flex h-auto w-1/4 items-center justify-between bg-slate-500 p-4"
          >
            <h2>{question.question}</h2>
            <button
              onClick={(e) => {
                e.preventDefault();
                deleteQuestion.mutate({
                  id: question.id,
                });
              }}
              className="reg-button flex w-8 items-center justify-center bg-red-400"
            >
              X
            </button>
          </div>
        ))}
      </main>
    </>
  );
};

export default AllQuestions;
