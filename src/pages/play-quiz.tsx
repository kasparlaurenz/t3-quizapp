import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import AnswerButton from "../components/AnswerButton";
import { trpc } from "../utils/trpc";

const PlayQuiz: NextPage = () => {
  const [curQuestionIdx, setCurQuestionIdx] = useState<number>(0);
  const {
    data: questions,
    isLoading,
    isError,
  } = trpc.question.getQuestionsWithAnswers.useQuery();

  if (isLoading) {
    return <div>Loading...</div>;
  }

  if (isError) {
    return <div>Error</div>;
  }

  return (
    <>
      <Head>
        <title>QuizApp</title>
        <meta name="description" content="Generated by create-t3-app" />
      </Head>

      <main className="container mx-auto flex min-h-screen flex-col items-center justify-center p-4">
        <h1 className="text-3xl font-bold text-sky-300">QuizApp</h1>

        <Link className="reg-button mt-10 w-fit" href="create-question">
          Create Question
        </Link>
        <Link className="reg-button mt-8 w-fit" href="/">
          Return home
        </Link>

        {questions.length > 0 && curQuestionIdx < questions.length ? (
          <div>
            <div className="flex flex-col items-center justify-center">
              <h3 className="mt-10">Question</h3>
              <span className="font-bold text-blue-400">
                {curQuestionIdx + 1} / {questions.length}
              </span>
              <p className="text-2xl">{questions[curQuestionIdx]?.question}?</p>
              <div className="mt-10 flex w-full items-center justify-between gap-4">
                {questions[curQuestionIdx]?.answers.map((answer) => (
                  <AnswerButton key={answer.id} answer={answer} />
                ))}
              </div>
            </div>
          </div>
        ) : (
          <p className="mt-6 text-lg text-red-400">No more questions to load</p>
        )}
      </main>
    </>
  );
};

export default PlayQuiz;
